// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id               Int             @id @default(autoincrement())
  firebaseId       String          @unique
  username         String          @unique
  language         String
  avatar           Bytes?          
  status           String          @db.VarChar(128)
  messagesSent     Message[]       @relation("SentMessages")
  receivedMessages Message[]       @relation("ReceivedMessages")
  friends          User[]          @relation("UserFriends")
  friendsOf        User[]          @relation("UserFriends")
  sentRequests     FriendRequest[] @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceivedRequests")
}

model Message {
  id                Int      @id @default(autoincrement())
  content           String // Original content
  translatedContent String // Translated content
  senderId          String
  receiverId        String
  createdAt         DateTime @default(now())
  isRead            Boolean  @default(false)
  sender            User     @relation("SentMessages", fields: [senderId], references: [firebaseId])
  receiver          User     @relation("ReceivedMessages", fields: [receiverId], references: [firebaseId])
}

model FriendRequest {
  id         Int      @id @default(autoincrement())
  senderId   String
  receiverId String
  createdAt  DateTime @default(now())
  status     String   @default("PENDING") // Can be "PENDING, ACCEPTED, REJECTED"
  sender     User     @relation("SentRequests", fields: [senderId], references: [firebaseId])
  receiver   User     @relation("ReceivedRequests", fields: [receiverId], references: [firebaseId])
}
